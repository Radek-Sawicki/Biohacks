#!/usr/bin/env python
import sys
import re
import dendropy
from dendropy.calculate import treecompare
from collections import Counter

distances=[]
# establish common taxon namespace
tns = dendropy.TaxonNamespace()
# ensure all trees loaded use common namespace

reftree=sys.argv[1]
o=open(reftree,'r')
reftreeget = dendropy.Tree.get(file=o,schema='newick',taxon_namespace=tns)
o.close()

for tree in sys.argv[2:]:
    j = open(tree,'r')
    treeget=dendropy.Tree.get(file=j,schema='newick',taxon_namespace=tns)
    j.close()

    distances.append(float(treecompare.symmetric_difference(reftreeget, treeget)))

print distances
print 'there were %d distances calculated' %len(distances)
c=Counter(distances)
zeros=c[0]
print 'out of them, %d were 0' %zeros
print 'the fraction of getting back reference tree was %f' %((zeros+0.)/(len(distances)+0.))
print 'the average distance from reference tree was %f' %(sum(distances)/len(distances)) 
