#!/usr/bin/env python

import sys

def argreader():
    '''This function opens an unlimited amount of textfiles and reads them
    in order to store them into a list of lists ("listionary") before closing 
    the files. The file names are provided in the terminal (argument vector) by 
    the user as arguments nr. 1 and onward'''
    listionary=[]
    redundancy=[]
    for i in sys.argv[1:]:
        if '.fa' in i or '.fasta' in i or '.afa' in i or '.msl' in i:
            redundancy.append(i)
            redundant=len(redundancy)!=len(set(redundancy))
            if redundant==True:
                #print 'error: the same file was written twice!'
                sys.stderr.write('error: the same file was written twice!')
                sys.exit(1)
            j = open(i,'r')
            k = j.readlines()
            listionary.append(k)
            j.close()
        else:
            #print 'error: only fasta files accepted!'
            sys.stderr.write('error: only msl and fasta files accepted!')
            sys.exit(1)

    return listionary

################# MERGING SEQUENCES and dictionarizing and bogus check ##################
def dictionarizer(func):
    name=''
    seq=''
    lencheck=[]
    name_seq_dic= {}
    count=0

    for element in func:
        for line in element:
            count+=1 #first line checker
            if '>' in line:
                if count!=1: #only if not first line, there is a name and seq to unload
                    name_seq_dic[name]= seq #first time, it would empty key/value. It will
                    #unload the seq and name into the dictionary
                    lencheck.append(len(seq))
                    name= line #collects the name
                    seq=''
                else: #first time just save the name
                    name= line
            else:
                line=line.rstrip().upper()
                seq+=line #collects (and merges) sequence until it hits a name again

    name_seq_dic[name]= seq #one last unload is needed at the end.

    lencheck.append(len(seq))

    lenerror=len(set(lencheck))!=1
    if lenerror==True:
        sys.stderr.write('error: sequences are not of equal length!')
        sys.exit(1)

    howmany=len(seq) #this is candy for the next function
    
    return name_seq_dic, howmany #order must match later use
    
    

###########################################################################
def columnremover(name_seq_dic, howmany): #here you can even write (a,b) as long
#as main code has columnremover(name_seq_dic, howmany)
    
    print howmany
    for x in range(howmany):
        column=''
        for key in name_seq_dic:
            column+=name_seq_dic[key][x]
        print column
    return

################################# MAIN CODE ########################################

func=argreader()
#print func
#print dictionarizer(func)
name_seq_dic, howmany=dictionarizer(func) #name_seq_dic, howmany -order must match below

columnremover(name_seq_dic, howmany) #name_seq_dic, howmany -order must match above
